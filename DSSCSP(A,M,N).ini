 DSSCSP(A,M,N)
 1: Static S ← empty list
 2: if A is a Zero-Matrix then
 3:     M is a possible solution, add it to S
 4: end if
 5: i = argmaxi∈M(PMij j); where Mi is ith column in M
 6: A′,M′,N′ = A,M,N
 7: M′i = 0
 8: if A′M′ = N′ is possible then
 9:      Reduce(A′,N′,i,M′i)
 10:     Run DSS(A′,M′,N′) for further reduction
 11:     DSSCSP(A′,M′,N′)
 12: end if
 13: A′′,M′′,N′′ = A,M,N.
 14: M′′i = 1
 15:
 16: if A′′M′′ = N′′ is possible then
 17:     Reduce(A′′,N′′,i,M′′i )
 18:     Run DSS(A′′,M′′,N′′) for further reduction
 19:     DSSCSP(A′′′,M′′,N′′)
 20: end if
 21: Return S


  Algorithm 1 : Reduce(A,N,j,value) 
  1: if value is 0 then 
  2:     Set column j of A to 0 
  3: else if value is 1 then 
  4:     Reduce value of Nj by 1 
  5:     Set column j of A to 0 
  6: end if



  Algorithm 2 : DSS(A,M,N)
 1: Detrmined ← empty list
 2: loops ← Any significanly large number, say 10
 3: for loops number of times do
 4:     for Each row i in A do
 5:         Variables ← Number of variables in Ai
 6:         if Variables is 0 then
 7:             Delete row Ai from A
 8:         else if Ni is 0 then
 9:             for every variable vari,j = 1 in Ai do
 10:                Reduce(A,N,j,0)
 11:                Add variable Mj with value 0 to to Determined
 12:            end for
 13:        else if Variables = Ni then
 14:            for every variable vari,j = 1 in Ai do
 15:                Reduce(A,N,j,1)
 16:                Add variable Mj with value 1 to to Determined
 17:            end for
 18:        end if
 19:    end for
 20: end for
 21: Return Determined